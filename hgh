import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class DataMigration {
    // 数据库连接信息
    private static final String DB_URL = "jdbc:mysql://localhost:3306/your_database";
    private static final String DB_USER = "your_user";
    private static final String DB_PASSWORD = "your_password";
    private static final int BATCH_SIZE = 10000; // 每批处理的数据量

    public static void main(String[] args) {
        String startDate = "2024-10-01";
        String endDate = "2024-10-31";

        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
            connection.setAutoCommit(false);

            // 获取动态字段
            List<String> columns = getColumns(connection, "A");

            // 分批迁移数据
            boolean hasMoreData;
            do {
                hasMoreData = migrateBatch(connection, columns, startDate, endDate);
                connection.commit();
            } while (hasMoreData);

            System.out.println("数据迁移完成！");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static List<String> getColumns(Connection connection, String tableName) throws SQLException {
        List<String> columns = new ArrayList<>();
        String query = "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'your_database' AND TABLE_NAME = ?";
        try (PreparedStatement stmt = connection.prepareStatement(query)) {
            stmt.setString(1, tableName);
            try (ResultSet rs = stmt.executeQuery()) {
                while (rs.next()) {
                    columns.add(rs.getString("COLUMN_NAME"));
                }
            }
        }
        return columns;
    }

    private static boolean migrateBatch(Connection connection, List<String> columns, String startDate, String endDate) throws SQLException {
        String columnList = String.join(",", columns);
        String selectQuery = "SELECT " + columnList + " FROM A WHERE create_date >= ? AND create_date <= ? LIMIT ?";
        String insertQuery = "INSERT INTO B (" + columnList + ") VALUES (" + "?,".repeat(columns.size() - 1) + "?)";
        String deleteQuery = "DELETE FROM A WHERE create_date >= ? AND create_date <= ? AND id IN (" + "?,".repeat(BATCH_SIZE - 1) + "?)";

        try (PreparedStatement selectStmt = connection.prepareStatement(selectQuery);
             PreparedStatement insertStmt = connection.prepareStatement(insertQuery)) {

            selectStmt.setString(1, startDate);
            selectStmt.setString(2, endDate);
            selectStmt.setInt(3, BATCH_SIZE);

            try (ResultSet rs = selectStmt.executeQuery()) {
                List<Long> idsToDelete = new ArrayList<>();
                int count = 0;

                while (rs.next()) {
                    for (int i = 1; i <= columns.size(); i++) {
                        insertStmt.setObject(i, rs.getObject(columns.get(i - 1)));
                    }
                    insertStmt.addBatch();
                    idsToDelete.add(rs.getLong("id")); // 假设主键是 id
                    count++;
                }

                if (count > 0) {
                    insertStmt.executeBatch();

                    // 执行删除
                    try (PreparedStatement deleteStmt = connection.prepareStatement(deleteQuery)) {
                        deleteStmt.setString(1, startDate);
                        deleteStmt.setString(2, endDate);
                        for (int i = 0; i < idsToDelete.size(); i++) {
                            deleteStmt.setLong(3 + i, idsToDelete.get(i));
                        }
                        deleteStmt.executeUpdate();
                    }
                }

                return count > 0; // 是否还有数据需要迁移
            }
        }
    }
}
